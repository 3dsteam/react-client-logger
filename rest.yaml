openapi: 3.0.3

info:
  title: Client Logger API
  version: 1.0.0

security:
  - bearerAuth: [ ]

servers:
  - url: '{protocol}://{url}/{basePath}'
    description: Local server
    variables:
      protocol:
        default: 'https'
        description: The protocol to use
      url:
        default: 'localhost'
        description: The URL to connect to
      basePath:
        default: 'api'
        description: The base path to the API

paths:
  /logs:
    post:
      summary: Upload logs
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Log'
              description: The logs to save
      responses:
        204:
          description: Logs saved
        400:
          $ref: '#/components/responses/BadRequest'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Error:
      type: object
      required:
        - requestId
        - code
        - detail
        - message
      properties:
        requestId:
          type: string
          nullable: false
          description: Unique identifier of the request
        code:
          type: string
          nullable: false
          description: Error code
        detail:
          type: string
          nullable: false
          description: Error detail for debugging
        message:
          type: string
          nullable: false
          description: Message for the user
    Log:
      type: object
      required:
        - uuid
        - trace
        - level
        - message
        - breadcrumb
        - timestamp
      properties:
        uuid:
          type: string
          nullable: false
          description: The unique identifier of the log
        trace:
          type: string
          nullable: false
          description: |
            The trace identifier.  
            All logs with the same trace are related to the same session
        level:
          type: number
          enum:
            - 10
            - 20
            - 30
            - 40
            - 50
          nullable: false
          description: The log level (10=DEBUG, 20=INFO, 30=WARN, 40=ERROR, 50=CRITICAL)
        message:
          type: string
          nullable: false
          description: Log message
        content:
          type: string
          nullable: true
          description: Additional content (stringify JSON)
        breadcrumb:
          type: array
          nullable: false
          items:
            $ref: '#/components/schemas/BreadcrumbLog'
          description: Log with the same trace before this one
        timestamp:
          type: number
          nullable: false
          description: The timestamp of the log (milliseconds)
    BreadcrumbLog:
      type: object
      required:
        - uuid
        - level
        - message
        - timestamp
      properties:
        uuid:
          type: string
          nullable: false
          description: The unique identifier of the log
        level:
          type: number
          enum:
            - 10
            - 20
            - 30
            - 40
            - 50
          nullable: false
          description: The log level (10=DEBUG, 20=INFO, 30=WARN, 40=ERROR, 50=CRITICAL)
        message:
          type: string
          nullable: false
          description: Log message
        content:
          type: object
          nullable: true
          description: Additional content (any key-value pair)
        timestamp:
          type: number
          nullable: false
          description: The timestamp of the log (milliseconds)

  responses:
    BadRequest:
      description: Bad request error
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                $ref: '#/components/schemas/Error'
          example:
            error:
              requestId: REQ_018dc6e6460b7b9abb3097435a64e041
              code: BAD_REQUEST
              detail: "'and' condition requires at least one rule"
              message: Sorry, but the log is missing the message content
